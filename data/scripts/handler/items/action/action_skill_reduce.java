/*65
725
726
727
728
729
730
731
732
733
734
735
736
737
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
1060
1061
1062
1073
1374
1375
1538
1539
1540
1829
1830
1831
1832
1833
1834
2515
3889
3926
3927
3928
3929
3930
3931
3932
3933
3934
3935
3936
3958
3959
4038
4218
4411
4412
4413
4414
4415
4416
4417
4629
4630
4631
4632
4633
4634
4635
4636
4637
4638
4639
4640
4641
4642
4643
4644
4645
4646
4647
4648
4649
4650
4651
4652
4653
4654
4655
4656
4657
4658
4659
4660
4661
4662
4663
4664
4677
4678
4679
4680
5010
5168
5169
5197
5198
5199
5200
5201
5202
5203
5204
5234
5235
5236
5237
5238
5239
5240
5241
5242
5243
5244
5245
5246
5247
5248
5283
5342
5343
5560
5561
5562
5563
5564
5565
5566
5577
5578
5579
5580
5581
5582
5583
5584
5585
5586
5587
5589
5591
5592
5593
5594
5595
5703
5803
5804
5805
5806
5807
5858
5859
5908
5911
5914
6035
6036
6037
6316
6387
6389
6390
6391
6403
6406
6407
6409
6410
6569
6570
6571
6572
6573
6574
6575
6576
6577
6578
6643
6644
6652
6654
6655
6665
6666
6667
6668
6669
6670
6671
6672
6903
7061
7062
7117
7118
7119
7120
7121
7122
7123
7124
7125
7126
7127
7128
7129
7130
7131
7132
7133
7134
7135
7554
7555
7556
7557
7558
7559
7582
7618
7619
7906
7907
7908
7909
7910
7911
7912
7913
7914
7915
7916
7917
8030
8031
8032
8033
8056
8192
8193
8194
8195
8196
8197
8198
8199
8200
8201
8202
8273
8274
8275
8379
8555
8556
8594
8595
8596
8597
8598
8599
8622
8623
8624
8625
8626
8627
8628
8629
8630
8631
8632
8633
8634
8635
8636
8637
8638
8639
8663
8664
8665
8666
8667
8668
8669
8670
8671
8672
8673
8674
8675
8676
8677
8786
8787
8954
8955
8956
9146
9147
9148
9149
9150
9151
9152
9153
9154
9155
9156
9157
9205
9206
9207
9546
9547
9548
9549
9550
9551
9552
9553
9554
9555
9556
9557
9558
9559
9560
9561
9562
9563
9564
9565
9566
9567
9568
9569
9570
9571
9572
9647
9668
9672
9673
9685
9686
9687
9688
9689
9691
9694
9698
9699
9700
9701
9702
9703
9704
9705
9706
9707
9708
9709
9710
9711
9712
9713
9714
9715
9716
9897
9898
9997
9998
9999
10000
10001
10002
10015
10016
10017
10129
10130
10131
10132
10133
10134
10135
10136
10137
10138
10143
10144
10145
10146
10147
10148
10149
10150
10151
10152
10153
10154
10155
10156
10157
10159
10160
10161
10162
10166
10178
10179
10260
10261
10262
10263
10264
10265
10266
10267
10268
10269
10270
10271
10274
10409
10410
10411
10412
10425
10480
10481
10482
10520
10521
10522
10523
10524
10525
10526
10549
10550
10551
10552
10553
10554
10555
10556
10557
10558
10559
10560
10561
10562
10563
10564
10565
10566
10567
10568
10569
10570
10571
10572
10573
10574
10575
10576
10577
10578
10579
10580
10581
10582
10583
10584
10585
10586
10587
10588
10589
10591
10592
10593
10594
10595
10608
10609
10610
10632
10640
10641
10650
10666
12753
12768
12769
12770
12771
12819
13010
13011
13012
13027
13032
13033
13040
13041
13048
13049
13059
13071
13072
13073
13128
13129
13150
13151
13152
13258
13259
13261
13262
13263
13264
13265
13266
13267
13268
13269
13277
13278
13297
13298
13299
13382
13386
13387
13388
13395
13396
13397
13398
13399
13400
13401
13402
13403
13404
13405
13406
13407
13408
13409
13410
13411
13412
13413
13414
13420
13421
13540
13552
13553
13554
13555
13569
13570
13571
13572
13573
13574
13575
13576
13577
13578
13579
13580
13581
13582
13583
13584
13585
13586
13587
13588
13589
13590
13591
13592
13593
13594
13595
13596
13597
13598
13599
13600
13601
13602
13603
13604
13605
13606
13607
13608
13609
13610
13611
13612
13613
13614
13615
13616
13617
13618
13619
13620
13621
13622
13623
13624
13625
13626
13627
13628
13629
13630
13631
13632
13633
13634
13635
13636
13637
13638
13639
13640
13641
13642
13643
13644
13645
13646
13647
13648
13649
13650
13651
13652
13653
13654
13655
13656
13657
13658
13659
13660
13661
13662
13663
13664
13665
13666
13667
13668
13669
13670
13671
13672
13673
13674
13675
13676
13694
13728
13731
13732
13733
13734
13735
13736
13737
13738
13739
13750
13769
13771
13772
13773
13774
13775
13776
13787
13788
13793
13794
13795
13800
13801
13808
13809
13844
13853
13855
13879
14038
14039
14040
14041
14042
14043
14044
14045
14046
14047
14048
14049
14050
14051
14055
14068
14170
14171
14172
14173
14174
14175
14176
14177
14178
14179
14180
14181
14182
14183
14184
14185
14186
14187
14188
14189
14190
14191
14192
14193
14194
14195
14196
14197
14198
14199
14200
14201
14202
14203
14204
14205
14206
14207
14208
14209
14210
14211
14212
14213
14214
14215
14216
14217
14218
14219
14220
14221
14222
14223
14224
14225
14226
14227
14559
14614
14615
14682
14683
14684
14685
14686
14687
14688
14689
14690
14691
14692
14693
14694
14695
14696
14697
14698
14699
14700
14701
14722
14723
14724
14725
14726
14727
14728
14739
14741
14742
14743
14744
14745
14765
14769
14770
14815
14816
14817
14818
14820
14821
14822
14824
14825
14826
14827
14832
14835
15210
15211
15346
15347
15348
15349
15350
15356
15357
15364
15365
15366
15367
15368
15369
15379
15380
15381
15382
15418
15419
15420
15421
15422
15423
15424
15426
15427
15431
15432
15433
15438
15439
15440
15461
15463
15467
15470
15474
15475
15476
15477
15478
15479
15482
15483
15492
15507
15541
15542
15543
15690
15716
15826
15827
15828
16853
16403
16404
16405
16406
16407
16408
17005
17018
17030
17034
17035
17036
17037
17038
17039
17062
17063
17064
17065
17067
17068
17082
17083
17084
17085
17086
17093
17094
17095
17096
17097
17098
17099
17100
17101
17102
17103
17104
17105
17106
17107
17108
17109
17110
17111
17112
17113
17114
17115
17116
17117
17118
17119
17120
17121
17122
17123
17124
17125
17126
17127
17128
17129
17130
17131
17132
17133
17134
17135
17136
17137
17139
17140
17163
20026
20027
20028
20034
20214
22006
22007
22008
22009
22010
22011
22012
22013
22014
22015
22016
22017
22018
22019
22020
22021
22022
22023
22024
22025
22026
22027
22028
22029
22030
22031
22032
22033
22034
22035
22036
22037
22038
22039
22040
22041
22042
22043
22044
22045
22046
22047
22048
22049
22050
22051
22052
22053
20320
20353
20354
20355
20356
20357
20358
20359
20360
20361
20362
20363
20364
20365
20366
20367
20368
20369
20370
20371
20372
20373
20374
20375
20376
20377
20378
20379
20380
20381
20382
20383
20384
20385
20386
20387
20388
20389
20390
20391
20392
20393
20394
20517
20518
20519
20520
20521
20522
20523
20524
20525
20526
20527
20528
20529
20530
20531
20532
20533
20534
20545
20546
20547
20582
20583
20584
20585
20586
20602
20603
20630
20707
20708
20709
20728
20729
20730
20731
20764
20765
20766
20767
20768
20769
20788
20868
20870
20871
20872
20873
20874
20875
20876
20877
20878
20879
20880
20881
20882
20896
20899
20954
20955
20992
21030
21031
21032
21033
21034
21037
21038
21039
21040
21093
21094
*/
package handler.items.action;

import org.jts.dataparser.data.holder.itemdata.ItemData.ItemAction;
import org.mmocore.gameserver.data.xml.holder.ItemTemplateHolder;
import org.mmocore.gameserver.object.Creature;
import org.mmocore.gameserver.object.Playable;
import org.mmocore.gameserver.object.Player;
import org.mmocore.gameserver.object.components.items.ItemInstance;
import org.mmocore.gameserver.skills.SkillEntry;
import org.mmocore.gameserver.templates.item.ItemTemplate;

import gnu.trove.set.hash.TIntHashSet;
import handler.items.ScriptItemHandler;

/**
 * @author KilRoy
 * Временно используем экшн - action_skill_reduce_new
 */
public class action_skill_reduce extends ScriptItemHandler
{
	private int[] _itemIds;

	public action_skill_reduce()
	{
		final TIntHashSet set = new TIntHashSet();
		for(final ItemTemplate template : ItemTemplateHolder.getInstance().getAllTemplates())
		{
			if(template == null)
			{
				continue;
			}

			if(template.getActionType() == ItemAction.action_skill_reduce_new)
			{
				set.add(template.getItemId());
			}
		}
		_itemIds = set.toArray();
	}

	@Override
	public boolean useItem(Playable playable, ItemInstance item, boolean ctrl)
	{
		final Player player;
		if(playable.isPlayer())
		{
			player = (Player) playable;
		}
		else if(playable.isPet())
		{
			player = playable.getPlayer();
		}
		else
		{
			return false;
		}

		SkillEntry[] skills = item.getTemplate().getAttachedSkills();

		for(int i = 0; i < skills.length; i++)
		{
			SkillEntry skill = skills[i];
			Creature aimingTarget = skill.getTemplate().getAimingTarget(player, player.getTarget());
			if(skill.checkCondition(player, aimingTarget, ctrl, false, true))
			{
				if(player.getInventory().removeItemByObjectId(item.getObjectId(), 1) == null)
				{
					return false;
				}
				player.getAI().Cast(skill, aimingTarget, ctrl, false);
			}
			else if(i == 0)
			{
				return false;
			}
		}
		return true;
	}

	@Override
	public int[] getItemIds()
	{
		return _itemIds;
	}
}